---
# tasks file for bareos_webui

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: yes
  delegate_to: localhost

- name: Install requirements
  ansible.builtin.package:
    name: "{{ bareos_webui_requirements }}"

- name: Install bareos-webui
  ansible.builtin.package:
    name: bareos-webui
  notify:
    - Restart httpd

- name: Set "enabled" in directors.ini
  community.general.ini_file:
    path: /etc/bareos-webui/directors.ini
    section: "{{ item.name }}"
    option: enabled
    value: "{{ item.enabled | ternary('Yes', 'No') }}"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ bareos_webui_directors }}"
  loop_control:
    label: "{{ item.name }}"

- name: Set "diraddress" in directors.ini
  community.general.ini_file:
    path: /etc/bareos-webui/directors.ini
    section: "{{ item.name }}"
    option: diraddress
    value: "{{ item.diraddress }}"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ bareos_webui_directors }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.enabled

- name: Set settings for configuration.ini
  community.general.ini_file:
    path: /etc/bareos-webui/configuration.ini
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    owner: root
    group: root
    mode: "0644"
  loop: "{{ bareos_webui_configuration }}"
  loop_control:
    label: "{{ item.section }}:{{ item.option }}"

- name: Place TLS certificates
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: bareos
    group: bareos
    mode: "0640"
    backup: "{{ bareos_dir_backup_configurations }}"
  loop:
    - src: bareos_webui_tls_ca_cert_src
      dest: bareos_webui_tls_ca_cert_dest
    - src: bareos_webui_tls_cert_chain_src
      dest: bareos_webui_tls_cert_chain_dest
  when:
    - bareos_webui_tls_enable
    - bareos_webui_tls_ca_cert_src != ""
    - bareos_webui_tls_cert_chain_src != ""

- name: Set SELinux boolean httpd_can_network_connect
  ansible.posix.seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes
  when:
    - ansible_selinux.status is defined
    - ansible_selinux.status == "enabled"

# LetsEncrypt
- name: Generate Let's Encrypt account key if not present
  shell: "if [ ! -f {{ bareos_webui_letsencrypt_account_key }} ]; then openssl genrsa 4096 | sudo tee {{ bareos_webui_letsencrypt_account_key }}; fi"
  when:
    - bareos_webui_ssl_enable

- name: Generate Let's Encrypt CSR
  shell: "openssl req -new -sha256 -key /etc/letsencrypt/keys/{{ bareos_webui_domain }}.key -subj \"/CN={{ bareos_webui_domain }}\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"\n[SAN]\nsubjectAltName=DNS:{{ bareos_webui_domain }}\")) | sudo tee /etc/letsencrypt/csrs/{{ bareos_webui_domain }}.csr"
  args:
    executable: /bin/bash
  when:
    - bareos_webui_ssl_enable

- name: Begin Let's Encrypt challenges
  acme_certificate:
    acme_directory: "{{ bareos_webui_acme_directory }}"
    acme_version: "{{ bareos_webui_acme_version }}"
    account_key_src: "{{ bareos_webui_letsencrypt_account_key }}"
    account_email: "{{ bareos_webui_acme_email }}"
    terms_agreed: 1
    challenge: "{{ bareos_webui_acme_challenge_type }}"
    csr: "{{ bareos_webui_letsencrypt_csrs_dir }}/{{ bareos_webui_domain }}.csr"
    dest: "{{ bareos_webui_letsencrypt_certs_dir }}/{{ bareos_webui_domain }}.crt"
    fullchain_dest: "{{ bareos_webui_letsencrypt_certs_dir }}/fullchain_{{ bareos_webui_domain }}.crt"
    remaining_days: 91
  register: acme_challenge_webui
  when:
    - bareos_webui_ssl_enable

- name: Create .well-known/acme-challenge directory
  file:
    path: /var/www/html/.well-known/acme-challenge
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  when:
    - bareos_webui_ssl_enable

- name: Implement http-01 challenge files
  copy:
    content: "{{ acme_challenge_webui['challenge_data'][item]['http-01']['resource_value'] }}"
    dest: "/var/www/html/{{ acme_challenge_webui['challenge_data'][item]['http-01']['resource'] }}"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  with_items:
  - "{{ bareos_webui_domain }}"
  when:
    - bareos_webui_ssl_enable

- name: Complete Let's Encrypt challenges
  acme_certificate:
    acme_directory: "{{ bareos_webui_acme_directory }}"
    acme_version: "{{ bareos_webui_acme_version }}"
    account_key_src: "{{ bareos_webui_letsencrypt_account_key }}"
    account_email: "{{ bareos_webui_acme_version }}"
    challenge: "{{ bareos_webui_acme_challenge_type }}"
    csr: "{{ bareos_webui_letsencrypt_csrs_dir }}/{{ bareos_webui_domain }}.csr"
    dest: "{{ bareos_webui_letsencrypt_certs_dir }}/{{ bareos_webui_domain }}.crt"
    chain_dest: "{{ bareos_webui_letsencrypt_certs_dir }}/chain_{{ bareos_webui_domain }}.crt"
    fullchain_dest: "{{ bareos_webui_letsencrypt_certs_dir }}/fullchain_{{ bareos_webui_domain }}"
    data: "{{ acme_challenge_webui }}"
  when:
    - bareos_webui_ssl_enable